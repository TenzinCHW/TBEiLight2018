import math

Drums = {'D1':(0,0), 'D2':(684, 0), 'D3':(483, 150), 'D4':(636, 220)}

D1 = {'1':(129, 230), '2':(129, 335), '3':(133, 75), '4':(133, 145), '5':(180,15), '6':(180, 32), '7':(180, 100), '8':(180, 125), '9':(180, 190), '10':(180, 220), '11':(210, 250), '12':(210, 270), '13':(180, 275), '14':(210, 290), '15':(180, 315), '16':(210, 320), '17':(210, 355), '18':(210, 50), '19':(230, 65), '20':(230, 90), '21':(227, 110), '22':(225, 135), '23':(230, 155), '24':(220, 160), '25':(225, 182), '26':(212, 207), '27':(261, 12), '28':(261, 30), '29':(272, 42), '30':(262, 95), '31':(263, 110), '32':(263, 117), '33':(260, 135), '34':(275, 168), '35':(310, 205), '36':(262, 220), '37':(262, 235), '38':(265, 250), '39':(263, 275), '40':(308, 280), '41':(261, 295), '42':(262, 315), '43':(313, 218), '44':(313, 245), '45':(309, 345)}

D2 = {'46':(124, 255), '47':(124, 330), '48':(125, 55), '49':(124, 147), '50':(180, 220), '51':(180, 255), '52':(181, 280), '53':(178, 350), '54':(180, 5), '55':(180, 32), '56':(182, 70), '57':(180, 100), '58':(177, 128), '59':(227, 205), '60':(229, 230), '61':(235, 255), '62':(230, 270), '63':(227, 300), '64':(228, 340), '65':(230, 15), '66':(233, 50), '67':(234, 80), '68':(230, 110), '69':(230, 150), '70':(189, 170)}

D3 = {'71':(132, 85), '72':(132, 160), '73':(132, 235), '74':(130, 345), '75':(178, 10), '76':(178, 47), '77':(181, 71), '78':(179, 99), '79':(176, 124), '80':(182, 160), '81':(179, 200), '82':(179, 230), '83':(182, 267), '84':(221, 25), '85':(224, 50), '86':(220, 93), '87':(223, 120), '88':(225, 147), '89':(227, 165), '90':(222, 185), '91':(255, 205), '92':(220, 215), '93':(255, 225), '94':(222, 240), '95':(225, 263)}

D4 = {'96':(122, 30), '97':(120, 110), '98':(120, 205), '99':(120, 278), '100':(149, 22), '101':(157, 65), '102':(153, 133), '103':(151, 170), '104':(152, 190), '105':(151, 235), '106':(153, 245), '107':(155, 270), '108':(161, 297), '109':(155, 333), '110':(187, 36), '111':(187, 95), '112':(188, 127), '113':(187,163), '114':(190, 180), '115':(188, 210), '116':(225, 240), '117':(222, 258), '118':(222, 278), '119':(222, 300), '0':(178, 0)}


def polar_to_cart(rad, ang):
    '''Takes rad in cm and ang in degrees and returns x and y coords in dm'''
    x = rad/10 * math.cos(math.radians(ang))
    y = rad/10 * math.sin(math.radians(ang))
    return x, y

def build_loc_dict(current_dict, loc_in_polar, drums, drum_name):
    offset = polar_to_cart(*drums[drum_name])
    current_dict[drum_name] = int(offset[0]), int(offset[1])
    for k, v in loc_in_polar.items():
        assert(k not in current_dict.keys())
        x, y = polar_to_cart(v[0], v[1])
        x += offset[0]
        y += offset[1]
        current_dict[k] = int(x), int(y)
    return current_dict

def normalise(loc_dict):
    min_x = min(item[0] for item in loc_dict.values())
    min_y = min(item[1] for item in loc_dict.values())
    for k, v in loc_dict.items():
        loc_dict[k] = v[0] - min_x, v[1] - min_y
    return loc_dict

if __name__ == '__main__':
    current = {}
    current = build_loc_dict(current, D1, Drums, 'D1')
    current = build_loc_dict(current, D2, Drums, 'D2')
    current = build_loc_dict(current, D3, Drums, 'D3')
    current = build_loc_dict(current, D4, Drums, 'D4')
    #r, a = Drums['D2']
    #offset = polar_to_cart(r, a)
    #current = build_loc_dict(current, D2, offset)
    #r, a = Drums['D3']
    #offset = polar_to_cart(r, a)
    #current = build_loc_dict(current, D3, offset)
    #r, a = Drums['D4']
    #offset = polar_to_cart(r, a)
    #current = build_loc_dict(current, D4, offset)
    current = normalise(current)
    print(current)
